//////////////////////////////////////////////////////////////////////////
// Filename: systemclass.h
// Author: Jeremy J. Hartmann
//////////////////////////////////////////////////////////////////////////
#ifndef _SYSTEMCLASS_H_
#define _SYSTEMCLASS_H_

//////////////////////////////////////////////////////////////////////////
// PRE-PROCESS: reduces size of header files.
//////////////////////////////////////////////////////////////////////////
#define WIN32_LEAN_AND_MEAN

//////////////////////////////////////////////////////////////////////////
// INCLUDES
//////////////////////////////////////////////////////////////////////////
#include <windows.h>

// CLASES



//////////////////////////////////////////////////////////////////////////
// Class name: SystemClass
//////////////////////////////////////////////////////////////////////////
#pragma once
class SystemClass
{
public:
    SystemClass();
    SystemClass(const SystemClass&);
    ~SystemClass();

    bool Initialize();
    void Shutdown();
    void Run();


    LRESULT CALLBACK MessageHandler(HWND, UINT, WPARAM, LPARAM);


private:
    bool Frame();
    void InitializeWindows(int&, int&);
    void ShutdownWindows();

private:
    LPCWSTR m_applicationName;
    HINSTANCE m_hinstance;
    HWND m_hwnd;

    //InputClass *m_input;
    //GraphicsClass *m_graphics;
     
};

//////////////////////////////////////////////////////////////////////////
// FUNCTION PROTOTYPES
//////////////////////////////////////////////////////////////////////////
static LRESULT CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM);

//////////////////////////////////////////////////////////////////////////
// GLOBALS
//////////////////////////////////////////////////////////////////////////
static SystemClass *ApplicationHandle = 0;


#endif // _SYSTEMCLASS_H_

